<UserControl x:Class="TradeControl.Bitcoin.InvoicesControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TradeControl.Bitcoin"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <DataGrid x:Name="dgInvoices" ItemsSource="{Binding}" AutoGenerateColumns="False" AlternatingRowBackground="#FFF0F0F0" HorizontalGridLinesBrush="#FFE4E4E4" VerticalGridLinesBrush="#FFE4E4E4" SelectionMode="Single" IsManipulationEnabled="True" IsReadOnly="True" ContextMenuOpening="dgInvoices_ContextMenuOpening" CellStyle="{DynamicResource DataGridCellStyle1}" >
        <DataGrid.Resources>
            <Style x:Key="DataGridCellStyle1" TargetType="{x:Type DataGridCell}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Margin" Value="3" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                    </Trigger>
                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsSelected" Value="true"/>
                            <Condition Property="Selector.IsSelectionActive" Value="false"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                    </MultiTrigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </DataGrid.Resources>
        <DataGrid.Columns >
            <DataGridTextColumn Header="Invoice No." Binding="{Binding Path=InvoiceNumber}"  />
            <DataGridTextColumn Header="Status" Binding="{Binding Path=InvoiceStatus}" />
            <DataGridTextColumn Header="Type" Binding="{Binding Path=InvoiceType}" />
            <DataGridTextColumn Header="Account" Binding="{Binding Path=AccountCode}" />
            <DataGridTextColumn Header="Due" Binding="{Binding Path=DueOn}" />
            <DataGridTextColumn Header="Expected" Binding="{Binding Path=ExpectedOn}" />
            <DataGridTextColumn Header="Unpaid Days" Binding="{Binding Path=UnpaidDays}" />
            <DataGridTextColumn Header="Value" Binding="{Binding Path=InvoiceValue}" />
            <DataGridTextColumn Header="Tax" Binding="{Binding Path=TaxValue}" />
            <DataGridTextColumn Header="Unpaid" Binding="{Binding Path=UnpaidValue}" />
            <DataGridTextColumn Header="Payment Address" Binding="{Binding Path=PaymentAddress}" />
            <DataGridTextColumn Header="Terms" Binding="{Binding Path=PaymentTerms}" />
            <DataGridTextColumn Header="Notes" Binding="{Binding Path=Notes}" />
        </DataGrid.Columns>
        <DataGrid.ContextMenu>
            <ContextMenu >
                <MenuItem Header="New Payment Address" Name="dgInvoicesMenuItemNewReceipt" Click="MenuItemNewReceipt_Click" />
                <MenuItem Header="Assign Receipt Key" Name="dgInvoicesMenuItemAssignReceipt" Click="MenuItemAssignReceipt_Click" />
                <MenuItem Header="Pay Outstanding Balance" Name="dgInvoicesMenuItemPayBalance" Click="MenuItemPayBalance_Click" />
                <Separator />
                <MenuItem Header="Copy Address" Name="dgInvoicesMenuItemCopy" Click="MenuItemCopy_Click" />
            </ContextMenu>
        </DataGrid.ContextMenu>
    </DataGrid>

</UserControl>
